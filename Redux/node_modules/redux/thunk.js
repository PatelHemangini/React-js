
const redux = require('redux')
const { thunk } = require('redux-thunk')
const axios = require('axios')

const initialstate = {
    loading: true,
    users: [],
    error: ''
}
const REQUEST_FETCH_DATA = 'REQUEST_FETCH_DATA'
const requestFetchData = { type: REQUEST_FETCH_DATA }

const REQUEST_SUCCESS = 'REQUEST_SUCCESS'
const request_success = (data) => { return { type: REQUEST_SUCCESS, apidata: data } }

const REQUEST_FAIL = 'REQUEST_FAIL'
const request_fail = { type: REQUEST_FAIL, error: 'this is error' }


const datamanager = (currentstate = initialstate, action) => {
    switch (action.type) {
        case REQUEST_FETCH_DATA:
            return {
                loading: true,
                users: [],
                error: ""
            }


        case REQUEST_SUCCESS:
            return {
                loading: false,
                users: action.apidata,
                error: ""
            }

        case REQUEST_FAIL:
            return {
                loading: false,
                users: [],
                error: action.error
            }


        default: currentstate
            break;
    }
}
const fetchData = () => {
    return function (dispacher) {
        dispacher( requestFetchData)
        axios.get('https://jsonplaceholder.typicode.com/todos/1')
            .then((data) => { dispacher(request_success(data)) })
            .catch((error) => { dispacher(request_fail() )})
    }

}

const store = redux.createStore(datamanager, redux.applyMiddleware(thunk))
store.subscribe(()=>{console.log(store.getState())})
store.dispatch(fetchData())